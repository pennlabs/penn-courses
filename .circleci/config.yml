version: 2.1
orbs:
  docker: circleci/docker@0.5.19
  django-tools: pennlabs/django-tools@0.0.1
  helm-tools: pennlabs/helm-tools@0.1.7

branch-filters: &branch-filters
  filters:
    branches:
      only:
        - master
jobs:
  pcp-lint:
    working_directory: ~/pennlabs
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "frontend/plan/package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            cd frontend/plan && npm install
      - save_cache:
          key: dependency-cache-{{ checksum "frontend/plan/package-lock.json" }}
          paths:
            - frontend/plan/node_modules
      - run:
          name: Lint
          command: |
            cd frontend/plan && npm run lint
  check-no-lint:
    working_directory: ~/pennlabs
    docker:
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: mysql://root:password@127.0.0.1:3306/circle_test
      - image: circleci/mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: circle_test
    steps:
      - checkout
      - django-tools/setup
      - django-tools/test:
          project-name: "PennCourses"
      - django-tools/code-coverage
      - django-tools/upload-artifacts


workflows:
  version: 2
  build-and-deploy:
    jobs:
      # - django-tools/check:
          # project-name: "PennCourses"
      - check-no-lint
      - docker/publish:
          name: publish-backend
          requires:
            - django-tools/check
          cache_from: "pennlabs/penn-courses-backend:latest"
          image: "pennlabs/penn-courses-backend"
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - pcp-lint
      - docker/publish:
          name: publish-plan
          requires:
            - pcp-lint
          path: frontend/plan
          cache_from: "pennlabs/pcp-frontend:latest"
          image: "pennlabs/pcp-frontend"
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - helm-tools/deploy:
          requires:
            - publish-backend
            - publish-plan
          context: k8s-deploy
          <<: *branch-filters
