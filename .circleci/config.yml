version: 2.1
orbs:
  docker: circleci/docker@0.5.19
  django-tools: pennlabs/django-tools@0.0.2
  helm-tools: pennlabs/helm-tools@0.1.9
  # react-tools: pennlabs/react-tools@0.0.5

branch-filters: &branch-filters
  filters:
    branches:
      only:
        - master
jobs:
  pcp-lint:
    working_directory: ~/pennlabs
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "frontend/plan/package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            cd frontend/plan && npm install
      - save_cache:
          key: dependency-cache-{{ checksum "frontend/plan/package-lock.json" }}
          paths:
            - frontend/plan/node_modules
      - run:
          name: Sync shared components
          command: |
            cd frontend/plan/
            npm run sync
      - run:
          name: Lint PCP
          command: |
            cd frontend/plan
            npm run lint

  pca-lint:
    working_directory: ~/pennlabs
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "frontend/alert/package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            cd frontend/alert && npm install
      - save_cache:
          key: dependency-cache-{{ checksum "frontend/alert/package-lock.json" }}
          paths:
            - frontend/alert/node_modules
      - run:
          name: Sync shared components
          command: |
            cd frontend/alert
            npm run sync
      - run:
          name: Lint PCA
          command: |
            cd frontend/alert
            npm run lint

  shared-lint:
    working_directory: ~/pennlabs
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "frontend/shared-components/package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            cd frontend/shared-components && npm install
      - save_cache:
          key: dependency-cache-{{ checksum "frontend/shared-components/package-lock.json" }}
          paths:
            - frontend/shared-components/node_modules
      - run:
          name: Lint Shared Components
          command: |
            cd frontend/shared-components
            npm run lint


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - django-tools/check:
          project-name: "PennCourses"
          project-location: backend
      # - react-tools/check:
      #     name: check-alert
      #     project-location: frontend/alert
      # - react-tools/check:
      #     name: check-plan
      #     project-location: frontend/plan
      - pcp-lint
      - pca-lint
      - shared-lint
      - docker/publish:
          name: publish-backend
          requires:
            - django-tools/check
          path: backend
          cache_from: "pennlabs/penn-courses-backend:latest"
          image: "pennlabs/penn-courses-backend"
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - docker/publish:
          name: publish-plan
          requires:
            - pcp-lint
            - shared-lint
          path: frontend/plan
          cache_from: "pennlabs/pcp-frontend:latest"
          image: "pennlabs/pcp-frontend"
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - docker/publish:
          name: publish-alert
          requires:
            - pca-lint
            - shared-lint
          path: frontend/alert
          cache_from: "pennlabs/pca-frontend:latest"
          image: "pennlabs/pca-frontend"
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - helm-tools/deploy:
          requires:
            - publish-backend
            - publish-plan
            - publish-alert
          context: k8s-deploy
          <<: *branch-filters
