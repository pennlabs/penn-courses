export const dummy_courses = [{"id":"CIS-7980","title":"Explaining Explanation","description":"In the social sciences we often use the word \"explanation\" as if (a) we know what we mean by it, and (b) we mean the same thing that other people do. In this course we will critically examine these assumptions and their consequences for scientific progress. In part 1 of the course we will examine how, in practice, researchers invoke at least three logically and conceptually distinct meanings of \"explanation:\" identification of causal mechanisms; ability to predict (account for variance in) some outcome; and ability to make subjective sense of something. In part 2 we will examine how and when these different meanings are invoked across a variety of domains, focusing on social science, history, business, and machine learning, and will explore how conflation of these distinct concepts may have created confusion about the goals of science and how we evaluate its progress. Finally , in part 3 we will discuss some related topics such as null hypothesis testing and the replication crisis. We will also discuss specific practices that could help researchers clarify exactly what they mean when they claim to have \"explained\" something, and how adoption of such practices may help social science be more useful and relevant to society.","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-2400","title":"Intro To Comp Systems","description":"You know how to program, but do you know how computers really work? How do millions of transistors come together to form a complete computing system? This bottom-up course begins with transistors and simple computer hardware structures, continues with low-level programming using primitive machine instructions, and finishes with an introduction to the C programming language. This course is a broad introduction to all aspects of computer systems architecture and serves as the foundation for subsequent computer systems courses, such as Digital Systems Organization and Design (CIS 3710), Computer Operating Systems (CIS 3800), and Compilers and Interpreters (CIS 3410).","semester":"2023A","num_sections":1,"course_quality":2.688,"instructor_quality":2.862,"difficulty":3.246,"work_required":3.45,"recommendation_score":null},{"id":"CIS-1100","title":"Intro To Comp Prog","description":"Introduction to Computer Programming is the first course in our series introducing students to computer science. In this class you will learn the fundamentals of computer programming in Java, with emphasis on applications in science and engineering. You will also learn about the broader field of computer science and algorithmic thinking, the fundamental approach that computer scientists take to solving problems.","semester":"2023A","num_sections":18,"course_quality":2.715,"instructor_quality":2.727,"difficulty":3.137,"work_required":3.375,"recommendation_score":null},{"id":"CIS-1210","title":"Prog Lang and Tech II","description":"This is a course about Algorithms and Data Structures using the JAVA programming language. We introduce the basic concepts about complexity of an algorithm and methods on how to compute the running time of algorithms. Then, we describe data structures like stacks, queues, maps, trees, and graphs, and we construct efficient algorithms based on these representations. The course builds upon existing implementations of basic data structures in JAVA and extends them for the structures like trees, studying the performance of operations on such structures, and theiefficiency when used in real-world applications. A large project introducing students to the challenges of software engineering concludes the course.","semester":"2023A","num_sections":18,"course_quality":2.705,"instructor_quality":2.794,"difficulty":3.471,"work_required":3.564,"recommendation_score":null},{"id":"CIS-3200","title":"Intro To Algorithms","description":"How do you optimally encode a text file? How do you find shortest paths in a map? How do you design a communication network? How do you route data in a network? What are the limits of efficient computation? This course gives a comprehensive introduction to design and analysis of algorithms, and answers along the way to these and many other interesting computational questions. You will learn about problem-solving; advanced data structures such as universal hashing and red-black trees; advanced design and analysis techniques such as dynamic programming and amortized analysis; graph algorithms such as minimum spanning trees and network flows; NP-completeness theory; and approximation algorithms.","semester":"2023A","num_sections":1,"course_quality":2.79,"instructor_quality":3.116,"difficulty":3.527,"work_required":3.192,"recommendation_score":null},{"id":"CIS-1200","title":"Prog Lang & Tech I","description":"A fast-paced introduction to the fundamental concepts of programming and software design. This course assumes some previous programming experience, at the level of a high school computer science class or CIS 1100. (If you got at least 4 in the AP Computer Science A or AB exam, you will do great.) No specific programming language background is assumed: basic experience with any language (for instance Java, C, C++, VB, Python, Perl, or Scheme) is fine. If you have never programmed before, you should take CIS 1100 first.","semester":"2023A","num_sections":20,"course_quality":2.797,"instructor_quality":2.861,"difficulty":3.054,"work_required":3.365,"recommendation_score":null},{"id":"CIS-5230","title":"Ethical Algorithm Design","description":"This class introduces aspiring data science technologists to the spectrum of ethical concerns, focusing on social norms like fairness, transparency and privacy. It introduces technical approaches to a number of these problems, including by hands-on examination of the tradeoffs in fairness and accuracy in predictive technology, introduction to differential privacy, and overview of evaluation conventions for predictive technology. It also provides guidelines for examining system training data for bias, representation (of race, gender and other characteristics) and ecological validity. Equipped with this knowledge, students will learn how to conduct informed analysis of the usefulness of predictive systems; they will audit for ethical concerns papers from the contemporary top artificial intelligence venues and the ongoing senior design projects.\nEnrollment for this course will be by permission only. Students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.605,"instructor_quality":3.175,"difficulty":1.8,"work_required":1.895,"recommendation_score":null},{"id":"CIS-5710","title":"Comp Org and Design","description":"This is the second computer organization course and focuses on computer hardware design. Topics covered are: (1) basic digital system design including finite state machines, (2) instruction set design and simple RISC assembly programming, (3) quantitative evaluation of computer performance, (4) circuits for integer and floating-point arithmatic, (5) datapath and control, (6) micro-programming, (7) pipeling, (8) storage hierarchy and virtual memory, (9) input/output, (10) different forms of parallelism including instruction level parallelism, data-level parallelism using both vectors and message-passing multi-processors, and thread-level parallelism using shared memory multiprocessors. Basic cache coherence and synchronization. Prerequisite: Knowledge of at least one programming language.\nDuring Advance Registration and Open Enrollment this course is restricted to the graduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.665,"instructor_quality":2.895,"difficulty":3.305,"work_required":3.188,"recommendation_score":null},{"id":"CIS-4230","title":"Ethical Algorithm Design","description":"This class introduces aspiring data science technologists to the spectrum of ethical concerns, focusing on social norms like fairness, transparency and privacy. It introduces technical approaches to a number of these problems, including by hands-on examination of the tradeoffs in fairness and accuracy in predictive technology, introduction to differential privacy, and overview of evaluation conventions for predictive technology. It also provides guidelines for examining system training data for bias, representation (of race, gender and other characteristics) and ecological validity. Equipped with this knowledge, students will learn how to conduct informed analysis of the usefulness of predictive systems; they will audit for ethical concerns papers from the contemporary top artificial intelligence venues and the ongoing senior design projects.\nEnrollment for this course will be by permission only. Students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.605,"instructor_quality":3.175,"difficulty":1.8,"work_required":1.895,"recommendation_score":null},{"id":"CIS-4500","title":"Database & Info Systems","description":"This course provides an introduction to the broad field of database and information systems, covering a variety of topics relating to structured data, ranging from data modeling to logical foundations and popular languages, to system implementations. We will study the theory of relational and XML data design; the basics of query languages; efficient storage of data, execution of queries and query optimization; transactions and updates; web-database development; and \"big data\" and NoSQL systems. The course assumes mathematical and programming experience equivalent to CIS 1600 and CIS 1210.\nDuring Advance Registration and Open Enrollment this course is restricted to the undergraduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":2,"course_quality":2.53,"instructor_quality":2.654,"difficulty":2.404,"work_required":2.603,"recommendation_score":null},{"id":"CIS-3500","title":"Software Design/Engineer","description":"You know how to write a \"program\". But how do you create a software \"product\" as part of a team, with customers that have expectations of functionality and quality? This course introduces students to various tools (source control, automated build systems, programming environments, test automation, etc.) and processes (design, implementation, testing, and maintenance) that are used by professionals in the field of software engineering. Topics will include: software development lifecycle; agile and test-driven development; source control and continuous integration; requirements analysis; object-oriented design and testability; mobile and/or web application development; software testing; refactoring ; and software quality metrics.\nDuring Advance Registration and Open Enrollment this course is restricted to the undergraduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.754,"instructor_quality":2.996,"difficulty":2.032,"work_required":2.597,"recommendation_score":null},{"id":"CIS-5020","title":"Analysis of Algorithms","description":"An investigation of paradigms for design and analysis of algorithms. The course will include dynamic programming, flows and combinatorial optimization algorithms, linear programming, randomization and a brief introduction to intractability and approximation algorithms. The course will include other advanced topics, time permitting. Prerequisite: Data Structures and Algorithms at the undergraduate level.\nDuring Advance Registration and Open Enrollment this course is restricted to the graduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.885,"instructor_quality":2.993,"difficulty":3.408,"work_required":3.176,"recommendation_score":null},{"id":"CIS-2330","title":"Intro To Blockchain","description":"Blockchain or Distributed Ledger Technology (DLT) provides a decentralized method of information sharing between parties that do not trust each other. Instead the trust is in the underlying cryptographic algorithms. This practical introductory course provides  experience with the fundamentals of cryptography (codes and ciphers, symmetric and asymmetric encryption, public and private keys, hashes, and zero knowledge proofs) - as it is applied to implementing a blockchain solution. This course covers the basics of a distributed ledger, how it is built, used, and secured. Methods of ensuring consensus - from proof-of-work to proof-of-stake will be explored and analyzed. Students will have both written and practical assignments to build and deploy components of a blockchain solution.\nUpdate: This course is now open to all majors who wish to enroll until the course becomes full/closed.","semester":"2023A","num_sections":1,"course_quality":1.507,"instructor_quality":1.77,"difficulty":2.593,"work_required":2.36,"recommendation_score":null},{"id":"CIS-5500","title":"Database & Info Systems","description":"This course provides an introduction to the broad field of database and information systems, covering a variety of topics relating to structured data, ranging from data modeling to logical foundations and popular languages, to system implementations. We will study the theory of relational and XML data design; the basics of query languages; efficient storage of data, execution of queries and query optimization; transactions and updates; web-database development; and \"big data\" and NoSQL systems. The course assumes mathematical and programming experience equivalent to CIS 1600 and CIS 1210.","semester":"2023A","num_sections":3,"course_quality":2.634,"instructor_quality":2.759,"difficulty":2.602,"work_required":2.785,"recommendation_score":null},{"id":"CIS-4190","title":"Applied Machine Learning","description":"Machine learning has been essential to the success of many recent technologies, including autonomous vehicles, search engines, genomics, automated medical diagnosis, image recognition, and social network analysis, among many others. This course will introduce the fundamental concepts and algorithms that enable computers to learn from experience, with an emphasis on their practical application to real problems. This course will introduce supervised learning (decision trees, logistic regression, support vector machines, Bayesian methods, neural networks and deep learning), unsupervised learning (clustering, dimensionality reduction), and reinforcement learning. Additionally, the course will discuss evaluation methodology and recent applications of machine learning, including large scale learning for big data and network analysis.\nDuring Advance Registration and Open Enrollment this course is restricted to the undergraduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.332,"instructor_quality":2.542,"difficulty":3.184,"work_required":3.175,"recommendation_score":null},{"id":"CIS-4710","title":"Comp Org and Design","description":"This is the second computer organization course and focuses on computer hardware design. Topics covered are: (1) basic digital system design including finite state machines, (2) instruction set design and simple RISC assembly programming, (3) quantitative evaluation of computer performance, (4) circuits for integer and floating-point arithmatic, (5) datapath and control, (6) micro-programming, (7) pipeling, (8) storage hierarchy and virtual memory, (9) input/output, (10) different forms of parallelism including instruction level parallelism, data-level parallelism using both vectors and message-passing multi-processors, and thread-level parallelism using shared memory multiprocessors. Basic cache coherence and synchronization. Prerequisite: Knowledge of at least one programming language.\nDuring Advance Registration and Open Enrollment this course is restricted to the undergraduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.612,"instructor_quality":2.838,"difficulty":3.237,"work_required":3.182,"recommendation_score":null},{"id":"CIS-5190","title":"Applied Machine Learning","description":"Machine learning has been essential to the success of many recent technologies, including autonomous vehicles, search engines, genomics, automated medical diagnosis, image recognition, and social network analysis, among many others. This course will introduce the fundamental concepts and algorithms that enable computers to learn from experience, with an emphasis on their practical application to real problems. This course will introduce supervised learning (decision trees, logistic regression, support vector machines, Bayesian methods, neural networks and deep learning), unsupervised learning (clustering, dimensionality reduction), and reinforcement learning. Additionally, the course will discuss evaluation methodology and recent applications of machine learning, including large scale learning for big data and network analysis.\nDuring Advance Registration and Open Enrollment this course is restricted to the graduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.332,"instructor_quality":2.542,"difficulty":3.184,"work_required":3.175,"recommendation_score":null},{"id":"CIS-5050","title":"Software Systems","description":"This course provides an introduction to fundamental concepts of distributed systems, and the design principles for building large scale computational systems. Topics covered include communication, concurrency, programming paradigms, naming, managing shared state, caching, synchronization, reaching agreement, fault tolerance, security, middleware, and distributed applications. This course is appropriate as an upper-level undergraduate CIS elective. Prerequisite: Undergraduate-level knowledge of Operating Systems and Networking, programming experience. Prerequisite: Undergraduate-level knowledge of Operating Systems and Networking.\nDuring Advance Registration and Open Enrollment this course is restricted to the graduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.609,"instructor_quality":2.725,"difficulty":2.717,"work_required":2.972,"recommendation_score":null},{"id":"CIS-5800","title":"Machine Perception","description":"An introduction to the problems of computer vision and other forms of machine perception that can be solved using geometrical approaches rather than statistical methods. Emphasis will be placed on both analytical and computational techniques. This course is designed to provide students with an exposure to the fundamental mathematical and algorithmic techniques that are used to tackle challenging image based modeling problems. The subject matter of this course finds application in the fields of Computer Vision, Computer Graphics and Robotics. Some of the topics to be covered include: Projective Geometry, Camera Calibration, Image Formation, Projective, Affine and Euclidean Transformations, Computational Stereopsis, and the recovery of 3D structure from multiple 2D images. This course will also explore various approaches to object recognition that make use of geometric techniques, these would include alignment based methods and techniques that exploit geometric invariants. In the assignments for this course, students will be able to apply the techniques to actual computer vision problems. This course is appropriate as an upper-level undergraduate CIS elective. A solid grasp of the fundamentals of linear algebra. Some knowledge of programming in C and/or Matlab\nUpdate: This course is now open for enrollment.","semester":"2023A","num_sections":1,"course_quality":2.643,"instructor_quality":2.804,"difficulty":2.944,"work_required":2.771,"recommendation_score":null},{"id":"CIS-6100","title":"Adv Geometric Meth in Cs","description":"The purpose of this course is to present some of the advanced geometric methods used in geometric modeling, computer graphics, computer vision, etc. The topics may vary from year to year, and will be selected among the following subjects (nonexhaustive list): Introduction to projective geometry with applications to rational curves and surfaces, control points for rational curves, rectangular and triangular rational patches, drawing closed rational curves and surfaces; Differential geometry of curves (curvature, torsion, osculating planes, the Frenet frame, osculating circles, osculating spheres); Differential geometry of surfaces (first fundamental form, normal curvature, second fundamental form, geodesic curvature, Christoffel symbols, principal curvatures, Gaussian curvature, mean curvature, the Gauss map and its derivative dN, the Dupin indicatrix, the Theorema Egregium equations of Codazzi-Mainadi, Bonnet's theorem, lines of curvatures, geodesic torsion, asymptotic lines, geodesic lines, local Gauss-Bonnet theorem).","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-5480","title":"Os Design and Implement","description":"The purpose of this masters-level course is to teach the design and implementation Of operating systems and operating systems concepts that appear in other advanced systems. The course divides into three major sections. The first part of the course discusses concurrency: how to manage multiple tasks that execute at the same time and share resources. Topics in this section include processes and threads, context switching, synchronization, scheduling, and deadlock. The second part of the course addresses the problem of memory management; it will cover topics such as linking, dynamic memory allocation, dynamic address translation, virtual memory, and demand paging. The third major part of the course concerns file systems, including topics such as storage devices, disk management and scheduling, directories, protection, and crash recovery. After these three major topics, the class will conclude with specialized topics such as virtual machines and case studies of different operating systems (e.g. Android, Windows, Linux, etc.).\nDuring Advance Registration and Open Enrollment this course is restricted to the graduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/\n","semester":"2023A","num_sections":1,"course_quality":3.474,"instructor_quality":3.576,"difficulty":2.986,"work_required":3.252,"recommendation_score":null},{"id":"CIS-4550","title":"Internet & Web Systems","description":"This course focuses on the challenges encountered in building Internet and web systems: scalability, interoperability (of data and code), security and fault tolerance, consistency models, and location of resources, services, and data. We will examine how XML standards enable information exchange; how web services support cross-platform interoperability (and what their limitations are); how to build high-performance application servers; how \"cloud computing\" services work; how to perform Akamai-like content distribution; and how to provide transaction support in distributed environments. We will study techniques for locating machines, resources, and data (including directory systems, information retrieval indexing, ranking, and web search); and we will investigate how different architectures support scalability (and the issues they face). We will also examine ideas that have been proposed for tomorrow's Web, and we will see some of the challenges, research directions, and potential pitfalls. An important goal of the course is not simply to discuss issues and solutions, but to provide hands-on experience with a substantial implementation project. This semester's project will be a peer-to-peer implementation of a Googe-style search engine, including distributed, scalable crawling; indexing with ranking; and even PageRank. As a side-effect of the material of this course you will learn about some aspects of large-scale software development assimilating large APIs. Prerequisite: Familiarity with threads and concurrency, strong Java programming skills.\nDuring Advance Registration and Open Enrollment this course is restricted to the undergraduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":3.142,"instructor_quality":3.213,"difficulty":3.632,"work_required":3.871,"recommendation_score":null},{"id":"CIS-5550","title":"Internet & Web Systems","description":"This course focuses on the challenges encountered in building Internet and web systems: scalability, interoperability (of data and code), security and fault tolerance, consistency models, and location of resources, services, and data. We will examine how XML standards enable information exchange; how web services support cross-platform interoperability (and what their limitations are); how to build high-performance application servers; how \"cloud computing\" services work; how to perform Akamai-like content distribution; and how to provide transaction support in distributed environments. We will study techniques for locating machines, resources, and data (including directory systems, information retrieval indexing, ranking, and web search); and we will investigate how different architectures support scalability (and the issues they face). We will also examine ideas that have been proposed for tomorrow's Web, and we will see some of the challenges, research directions, and potential pitfalls. An important goal of the course is not simply to discuss issues and solutions, but to provide hands-on experience with a substantial implementation project. This semester's project will be a peer-to-peer implementation of a Googe-style search engine, including distributed, scalable crawling; indexing with ranking; and even PageRank. As a side-effect of the material of this course you will learn about some aspects of large-scale software development assimilating large APIs, thinking about modularity, reading other people's code, managing versions, debugging, etc. Prerequisite: Familiarity with threads and concurrency, strong Java programming skills.","semester":"2023A","num_sections":2,"course_quality":3.201,"instructor_quality":3.287,"difficulty":3.635,"work_required":3.878,"recommendation_score":null},{"id":"CIS-5680","title":"Game Design Practicum","description":"The objective of the game design practicum is to provide students with hands on experience designing and developing 3D games as well as Virtual Reality (VR) and Augmented Reality (AR) applications.  Working in teams of three, students will gain experience brainstorming original game concepts, writing formal design documents and developing a fully functional prototype of their game/application. Technical features to be designed and implemented include novel game mechanics and/or user interaction models, game physics, character animation, game AI (i.e. movement control, path planning, decision making, etc.), sound effects and background music, 2D graphical user interface (GUI) design and multiplayer networking capabilities. State-of-the-art game engine middleware such as the Unity3D and Unreal game engines will be used to expose student to commercial-grade software, production methodologies and art asset pipelines. As a result of their game development efforts, students will learn first-hand about the creative process, design documentation, object-oriented software design and engineering, project management (including effective team collaboration and communication techniques), design iteration through user feedback and play-testing, and most importantly, what makes a game or virtual reality experience interesting and fun to play.","semester":"2023A","num_sections":1,"course_quality":2.804,"instructor_quality":2.986,"difficulty":2.361,"work_required":2.875,"recommendation_score":null},{"id":"CIS-5220","title":"Deep Learning/Data Sci","description":"Deep learning techniques now touch on data systems of all varieties. Sometimes, deep learning is a product; sometimes, deep learning optimizes a pipeline; sometimes, deep learning provides critical insights; sometimes, deep learning sheds light on neuroscience or vice versa. The purpose of this course is to deconstruct the hype by teaching deep learning theories, models, skills, and applications that are useful for applications.\nEnrollment for this course will be by permission only. Students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.34,"instructor_quality":2.659,"difficulty":2.298,"work_required":2.614,"recommendation_score":null},{"id":"CIS-6300","title":"Natural Lang Processng","description":"Different topics selected each offering; e.g., NL generation, question-answering, information extraction, machine translation, restricted grammar formalisms, computational lexical semantics, etc.\nEnrollment for this course will be by permission only. Students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-2620","title":"Automata,Comput.& Complx","description":"This course explores questions fundamental to computer science such as which problems cannot be solved by computers, can we formalize computing as a mathematical concept without relying upon the specifics of programming languages and computing platforms, and which problems can be solved efficiently. The topics include finite automata and regular languages, context-free grammars and pushdown automata, Turing machines and undecidability, tractability and NP-completeness. The course emphasizes rigorous mathematical reasoning as well as connections to practical computing problems such as test processing, parsing, XML query languages, and program verification.","semester":"2023A","num_sections":2,"course_quality":2.011,"instructor_quality":2.347,"difficulty":3.089,"work_required":2.686,"recommendation_score":null},{"id":"CIS-5450","title":"Big Data Analytics","description":"In the new era of big data, we are increasingly faced with the challenges of processing vast volumes of data. Given the limits of individual machines (compute power, memory, bandwidth), increasingly the solution is to process the data in parallel on many machines. This course focuses on the fundamentals of scaling computation to handle common data analytics tasks. You will learn about basic tasks in collecting, wrangling, and structuring data; programming models for performing certain kinds of computation in a scalable way across many compute nodes; common approaches to converting algorithms to such programming models; standard toolkits for data analysis consisting of a wide variety of primitives; and popular distributed frameworks for analytics tasks such as filtering, graph analysis, clustering, and classification. Recommended: broad familiarity with probability and statistics, as well as programming in Python. Additional background in statistics, data analysis (e.g., in Matlab or R), and machine learning is helpful (example : ESE 5420).","semester":"2023A","num_sections":4,"course_quality":2.613,"instructor_quality":2.882,"difficulty":2.371,"work_required":2.505,"recommendation_score":null},{"id":"CIS-5200","title":"Machine Learning","description":"This course covers the foundations of statistical machine learning. The focus is on probabilistic and statistical methods for prediction and clustering in high dimensions. Topics covered include linear and logistic regression, SVMs, PCA and dimensionality reduction, EM and HMMs, and deep learning. Elementary probability, calculus, and linear algebra. Basic programming experience.\nDuring Advance Registration and Open Enrollment this course is restricted to the graduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.834,"instructor_quality":2.956,"difficulty":3.228,"work_required":3.34,"recommendation_score":null},{"id":"CIS-1600","title":"Math Found Comp Sci","description":"What are the basic mathematical concepts and techniques needed in computer science? This course provides an introduction to proof principles and logics, functions and relations, induction principles, combinatorics and graph theory, as well as a rigorous grounding in writing and reading mathematical proofs.","semester":"2023A","num_sections":22,"course_quality":2.705,"instructor_quality":2.951,"difficulty":3.592,"work_required":3.561,"recommendation_score":null},{"id":"CIS-5600","title":"Interactve Comp Graphics","description":"This course focuses on programming the essential mathematical and geometric concepts underlying modern computer graphics. Using 3D interactive implementations, it covers fundamental topics such as mesh data structures, transformation sequences, rendering algorithms, and curve interpolation for animation. Students are also introduced to two programming languages widely used in the computer graphics industry: C++ and GLSL. The curriculum is heavily project-based, and culminates in a group project focused on building an interactive first-person world exploration application using the various real-time interaction and rendering algorithms learned throughout the semester.","semester":"2023A","num_sections":2,"course_quality":3.052,"instructor_quality":3.157,"difficulty":3.177,"work_required":3.469,"recommendation_score":null},{"id":"CIS-4600","title":"Interactve Comp Graphics","description":"This course focuses on programming the essential mathematical and geometric concepts underlying modern computer graphics. Using 3D interactive implementations, it covers fundamental topics such as mesh data structures, transformation sequences, rendering algorithms, and curve interpolation for animation. Students are also introduced to two programming languages widely used in the computer graphics industry: C++ and GLSL. The curriculum is heavily project-based, and culminates in a group project focused on building an interactive first-person world exploration application using the various real-time interaction and rendering algorithms learned throughout the semester.","semester":"2023A","num_sections":2,"course_quality":3.195,"instructor_quality":3.214,"difficulty":3.333,"work_required":3.603,"recommendation_score":null},{"id":"CIS-5530","title":"Networked Systems","description":"This course provides an introduction to fundamental concepts in the design and implementation of networked systems, their protocols, and applications. Topics to be covered include: Internet architecture, network applications, addressing, routing, transport protocols, network security, and peer-to-peer networks. The course will involve written assignments, examinations, and programming assignments.. Students will work in teams to design and implement networked systems in layers, from routing protocols, transport protocols, to peer-to-peer networks.","semester":"2023A","num_sections":2,"course_quality":2.635,"instructor_quality":2.834,"difficulty":2.776,"work_required":2.753,"recommendation_score":null},{"id":"CIS-5610","title":"Advanced Rendering","description":"This course is designed to provide a comprehensive overview to computer graphics techniques in 3D modeling, image synthesis, and rendering. Topics cover: geometric transformations, geometric algorithms, software systems, 3D object models (surface, volume and implicit), visible surface algorithms, image synthesis, shading, mapping, ray tracing, radiosity, global illumination, sampling, anti- aliasing, Monte Carlo path tracing, and photon mapping. Prerequisite: A working knowledge of C++ programming is required (one year programming experience in general). Knowledge of vector geometry is useful.\nDuring Advance Registration and Open Enrollment this course is restricted to the graduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.775,"instructor_quality":3.105,"difficulty":3.091,"work_required":3.202,"recommendation_score":null},{"id":"CIS-4610","title":"Advanced Rendering","description":"This course is designed to provide a comprehensive overview to computer graphics techniques in 3D modeling, image synthesis, and rendering. Topics cover: geometric transformations, geometric algorithms, software systems, 3D object models (surface, volume and implicit), visible surface algorithms, image synthesis, shading, mapping, ray tracing, radiosity, global illumination, sampling, anti- aliasing, Monte Carlo path tracing, and photon mapping. Prerequisite: A working knowledge of C++ programming is required (one year programming experience in general). Knowledge of vector geometry is useful.\nDuring Advance Registration and Open Enrollment this course is restricted to the undergraduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.869,"instructor_quality":3.164,"difficulty":3.207,"work_required":3.258,"recommendation_score":null},{"id":"CIS-3990","title":"Special Topics","description":"Visit the CIS department website for descriptions of available Special Topics classes.\nEnrollment for this course will be by permission only. Students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":2.996,"instructor_quality":3.353,"difficulty":2.126,"work_required":2.187,"recommendation_score":null},{"id":"CIS-1050","title":"Comp Data Exploration","description":"The primary goal of this course is to introduce computational methods of interacting with data. In this course, students will be introduced to the IPython programming environment. They will learn how to gather data, store it in appropriate data structures and then either write their own functions or use libraries to analyze and then display the salient information in that data. Data will be drawn from a variety of domains, including but not limited to travel, entertainment, politics, economics, biology etc.","semester":"2023A","num_sections":4,"course_quality":3.188,"instructor_quality":3.361,"difficulty":2.637,"work_required":2.824,"recommendation_score":null},{"id":"CIS-6700","title":"Adv Tpcs/Program Lang","description":"The details of this course change from year to year, but its purpose is to cover theoretical topics related to programming languages. Some central topics include: denotational vs operational semantics, domain theory and category theory, the lambda calculus, type theory (including recursive types, generics, type inference and modules), logics of programs and associated completeness and decidability problems, specification languages, and models of concurrency. The course requires a degree of mathematical sophistication.","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-6010","title":"Adv Topics N Comp Arch","description":"This course will focus on research topics in computer architecture, and include reading and presenting research papers and an optional project. The content will differ with each offering, covering topics such as multicore programmability, datacenter and warehouse-scale computing, security, energy-efficient architectures, etc.\nDuring Advance Registration and Open Enrollment this course is restricted to the graduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-8100","title":"Writing and Speaking","description":"This course is aimed at training CIS PhD students to excel in writing and presenting research results.","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-6600","title":"Adv Tpcs in Comp Graphcs","description":"The goal of the course is to review state-of-the art research in the fields of computer graphics and animation as well as provide students with working knowledge of how to convert theory to practice by developing an associated graphics/animation authoring tool. The course is comprised of primers, lectures, student presentations and the authoring tool group project. Each student will be responsible for presenting one primer and at least two SIGGRAPH papers to the class. Working in teams of two, students will design and develop an authoring tool that that facilitates the creation of a new type of user interaction, animation/simulation capability or 3D graphics special effect. Research papers published in the SigGraph Conference proceedings will provide the basis for the features/functionality/special effects that can be selected for implementation in the authoring tool. Each group will analyze the need and user requirements for the tool they plan to develop, prepare a formal software design document, construct a project work plan, develop the authoring tool functionality and user interface, test the design and demonstratthe authoring of associated content. A plug-in to standard authoring tools such as Maya or Houdini must also be developed to enable importing of appropriate assets and/or exporting of results.\nDuring Advance Registration and Open Enrollment this course is restricted to the graduate programs listed below. All other students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. This also applies to all students if the course becomes closed/full.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-6730","title":"Comp Aided Verif","description":"This course introduces the theory and practice of formal methods for the design and analysis of concurrent and embedded systems. The emphasis is on the underlying logical and automata-theoretic concepts, the algorithmic solutions, and heuristics to cope with the high computational complexity. Topics: Models and semantics of reactive systems; Verification algorithms; Verification techniques. Topics may vary depending on instructor. Basic knowledge of algorithms, data structures, automata theory, propositional logic, operating systems, communication protocols, and hardware (CIS 2620, CIS 3800, or permission of the instructor).","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-4970","title":"Dmd Senior Project","description":"The goal of this course is to provide an opportunity for seniors to define, desand execute a project of your own choosing that demonstrates the technical skiland abilities that you have acquired during your 4 years as undergraduates. Evaluation is based on selecting an interesting topic, completing appropriate research on the state of the art in that area, communicating your objectives i writing and in presentations, accurately estimating what resources will be reqto complete your chosen task, coding necessary functionality, and executing your plan. Senior Standing or Permission of the instructor.","semester":"2023A","num_sections":1,"course_quality":2.865,"instructor_quality":3.191,"difficulty":2.808,"work_required":3.039,"recommendation_score":null},{"id":"CIS-4980","title":"Senior Capstone","description":"The Senior Capstone Project is required for all BAS degree students, in lieu of the senior design course. The Capstone Project provides an opportunity for the student to apply the theoretical ideas and tools learned from other courses. The project is usually applied, rather than theoretical, exercise, and should focus on a real-world problem related to the career goals of the student. The one-semester project may be completed in either the fall or spring term of the senior year, and must be done under the supervision of a sponsoring faculty member. To register for this course, the student must submit a detailed proposal, signed by the supervising professor and the student's faculty advisor, two weeks prior to the start of the term.","semester":"2023A","num_sections":1,"course_quality":2.474,"instructor_quality":2.87,"difficulty":2.582,"work_required":2.724,"recommendation_score":null},{"id":"CIS-8950","title":"Teaching Practicum","description":"Enrollment for students participating in Teaching Practicum.","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-9990","title":"Thesis/Diss Research","description":"For students pursuing advanced research to fulfill PhD dissertation requirements.","semester":"2023A","num_sections":76,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-4010","title":"Senior Project","description":"Continuation of CIS 4000. Design and implementation of a significant piece of work: software, hardware or theory. Students are required to submit a final written report and give a final presentation and demonstration of their project. Grades are based on the report, the presentation and the satisfactory completion of the project. These are evaluated by the Project Adviser and the Course Instructor. Senior standing or permission of instructor.","semester":"2023A","num_sections":1,"course_quality":1.758,"instructor_quality":1.998,"difficulty":2.14,"work_required":2.625,"recommendation_score":null},{"id":"CIS-7000","title":"Cis-Topics","description":"One time course offerings of special interest. Equivalent to a CIS 5XX level course.\nEnrollment for this course will be by permission only. Students will need to request permission (https://bit.ly/3Ru2uVr) for this course in order to be considered for enrollment. Once you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester. CIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":7,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-4110","title":"Senior Thesis","description":"The goal of a Senior Thesis project is to complete a major research project under the supervision of a faculty member. The duration of the project is two semesters. To enroll in CIS 4100, students must develop an abstract of the proposed work, and a member of the CIS graduate group must certify that the work is suitable and agree to supervise the project; a second member must agree to serve as a reader. At the end of the first semester, students must submit an intermediate report; if the supervisor and reader accept it, they can enroll in CIS 4110. At the end of the second semester, students must describe their results in a written thesis and must present them publicly, either in a talk at Penn or in a presentation at a conference or workshop. Grades are based on the quality of the research itself (which should ideally be published or at least of publishable quality), as well as on the quality of the thesis and the oral presentation. The latter are evaluated jointly by the supervisor and the reader. The Senior Thesis program is selective, and students are generally expected to have a GPA is in the top 10-20% to qualify.","semester":"2023A","num_sections":1,"course_quality":3.047,"instructor_quality":2.953,"difficulty":2.667,"work_required":2.667,"recommendation_score":null},{"id":"CIS-4100","title":"Senior Thesis","description":"The goal of a Senior Thesis project is to complete a major research project under the supervision of a faculty member. The duration of the project is two semesters. To enroll in CIS 4100, students must develop an abstract of the proposed work, and a member of the CIS graduate group must certify that the work is suitable and agree to supervise the project; a second member must agree to serve as a reader. At the end of the first semester, students must submit an intermediate report; if the supervisor and reader accept it, they can enroll in CIS 4110. At the end of the second semester, students must describe their results in a written thesis and must present them publicly, either in a talk at Penn or in a presentation at a conference or workshop. Grades are based on the quality of the research itself (which should ideally be published or at least of publishable quality), as well as on the quality of the thesis and the oral presentation. The latter are evaluated jointly by the supervisor and the reader. The Senior Thesis program is selective, and students are generally expected to have a GPA is in the top 10-20% to qualify. Senior Theses are expected to integrate the knowledge and skills from earlier coursework; because of this, students are not allowed to enroll in CIS 4100 before their sixth semester.","semester":"2023A","num_sections":1,"course_quality":3.75,"instructor_quality":3.668,"difficulty":2.667,"work_required":3.0,"recommendation_score":null},{"id":"CIS-8990","title":"PhD Independent Study","description":"For doctoral students studying a specific advanced subject area in computer and information science. The Independent Study may involve coursework, presentations, and formally gradable work comparable to that in a CIS 5000 or 6000 level course. The Independent Study may also be used by doctoral students to explore research options with faculty, prior to determining a thesis topic. Students should discuss with the faculty supervisor the scope of the Independent Study, expectations, work involved, etc. The Independent Study should not be used for ongoing research towards a thesis, for which the CIS 9990 designation should be used.","semester":"2023A","num_sections":76,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-5590","title":"Programming & Prob Solv","description":"This course develops students problem solving skills using techniques that they have learned during their CS training. Over the course of the semester, students work on group projects in which they use programming techniques to solve open-ended problems, e.g. optimization, simulation, etc. There are no \"correct\" answers to these problems; rather, the focus is on the four steps of the problem solving process: algorithmic thinking; programming; analysis; and communication. Prerequisite: Proficiency in Java.","semester":"2023A","num_sections":2,"course_quality":3.541,"instructor_quality":3.75,"difficulty":1.876,"work_required":2.224,"recommendation_score":null},{"id":"CIS-9950","title":"Dissertation","description":"For Ph.D. candidates working exclusively on their dissertation research, having completed enrollment for a total of ten semesters (fall and spring). There is no credit or grade for CIS 9950.","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-5810","title":"Comp Vision&Cmptnl Photo","description":"This is an introductory course to Computer Vision and Computational Photography. This course will explore three topics: 1) image morphing, 2) image matching and stitching, and 3) image recognition. This course is intended to provide a hands-on experience with interesting things to do on images/videos. The world is becoming image-centric. Cameras are now found everywhere, in our cell phones, automobiles, even in medical surgery tools. Computer vision technology has led to latest innovations in areas such as Hollywood movie production, medical diagnosis, biometrics, and digital library. This course is suited for students from all Engineering backgrounds, who have the basic knowledge of linear algebra and programming, and a lot of imagination.","semester":"2023A","num_sections":1,"course_quality":2.795,"instructor_quality":2.976,"difficulty":2.785,"work_required":2.835,"recommendation_score":null},{"id":"CIS-5150","title":"Fund of Lin Alg&Opt","description":"This course provides firm foundations in linear algebra and basic optimization techniques. Emphasis is placed on teaching methods and tools that are widely used in various areas of computer science. Both theoretical and algorithmic aspects will be discussed.","semester":"2023A","num_sections":1,"course_quality":2.351,"instructor_quality":2.799,"difficulty":3.269,"work_required":3.222,"recommendation_score":null},{"id":"CIS-5210","title":"Artificial Intelligence","description":"This course investigates algorithms to implement resource-limited knowledge-based agents which sense and act in the world. Topics include, search, machine learning, probabilistic reasoning, natural language processing, knowledge representation and logic. After a brief introduction to the language, programming assignments wil l be in Python.","semester":"2023A","num_sections":1,"course_quality":2.978,"instructor_quality":3.09,"difficulty":2.567,"work_required":2.664,"recommendation_score":null},{"id":"CIS-1880","title":"Special Topics","description":"This course will be used for 'pilot versions' of new CIS courses of this type that the department is planning to offer. A given course will be offered as CIS 1880 at most twice; after this, it will be assigned a permanent course number.\nEnrollment for this course will be by permission only and students will need to request permission (https://bit.ly/3Ru2uVr) for the recitation section (201) in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":2,"course_quality":3.436,"instructor_quality":3.49,"difficulty":2.096,"work_required":2.11,"recommendation_score":null},{"id":"CIS-1910","title":"Linux/Unix Skills","description":"Unix, in its many forms, runs much of the world's computer infrastructure, from cable modems and cell phones to the giant clusters that power Google and Amazon. This half-credit course provides a thorough introduction to Unix and Linux. Topics will range from critical basic skills such as examining and editing files, compiling programs and writing shell scripts, to higher level topics such as the architecture of Unix and its programming model. The material learned is applicable to many classes, including CIS 2400, CIS 3310, CIS 3410, CIS 3710, and CIS 3800.\nEnrollment for this course will be by permission only and students will need to request permission (https://bit.ly/3Ru2uVr) for the recitation section (201) in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":2,"course_quality":2.914,"instructor_quality":2.859,"difficulty":2.032,"work_required":2.219,"recommendation_score":null},{"id":"CIS-1950","title":"Mobile App Development","description":"This project-oriented course is centered around application development on current mobile platforms like iOS and Android. The first half of the course will involve fundamentals of mobile app development, where students learn about mobile app lifecycles, event-based programming, efficient resource management, and how to interact with the range of sensors available on modern mobile devices. In the second half of the course, students work in teams to conceptualize and develop a significant mobile application. Creativity and originality are highly encouraged! Prerequisite: CIS 1200 or previous programming experience.\nEnrollment for this course will be by permission only and students will need to request permission (https://bit.ly/3Ru2uVr) for the recitation section (201) in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":2,"course_quality":2.837,"instructor_quality":2.916,"difficulty":2.197,"work_required":2.391,"recommendation_score":null},{"id":"CIS-1940","title":"Intro to Haskell","description":"Haskell is a high-level, purely functional programming language with a strong static type system and elegant mathematical underpinnings. It is being increasingly used in industry by organizations such as Facebook, AT&T, and NASA, along with several financial firms. We will explore the joys of functional programming, using Haskell as a vehicle. The aim of the course will be to allow you to use Haskell to easily and conveniently write practical programs. Evaluation will be based on regular homework assignments and class participation.\nEnrollment for this course will be by permission only and students will need to request permission (https://bit.ly/3Ru2uVr) for the recitation section (201) in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":2,"course_quality":3.182,"instructor_quality":3.172,"difficulty":2.818,"work_required":2.565,"recommendation_score":null},{"id":"CIS-1920","title":"Python Prog","description":"Python is an elegant, concise, and powerful language that is useful for tasks large and small. Python has quickly become a popular language for getting things done efficiently in many in all domains: scripting, systems programming, research tools, and web development. This course will provide an introduction to this modern high-level language using hands-on experience through programming assignments and a collaborative final application development project.\nEnrollment for this course will be by permission only and students will need to request permission (https://bit.ly/3Ru2uVr) for the recitation section (201) in order to be considered for enrollment.\n\nOnce you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester.\nCIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":2,"course_quality":2.88,"instructor_quality":3.027,"difficulty":2.036,"work_required":2.192,"recommendation_score":null},{"id":"CIS-1890","title":"Slv Hrd Prob in Practice","description":"What does Sudoku have in common with debugging, scheduling exams, and routing shipments? All of these problems are provably hard -- no one has a fast algorithm to solve them. But in reality, people are quickly solving these problems on a huge scale with clever systems and heuristics! In this course, we'll explore how researchers and organizations like Microsoft, Google, and NASA are solving these hard problems, and we'll get to use some of the tools they've built!\nEnrollment for this course will be by permission only and students will need to request permission (https://bit.ly/3Ru2uVr) for the recitation section (201) in order to be considered for enrollment. Once you have requested permission we will add you to the CIS Waitlist when it opens up towards the end of the Fall semester. CIS Waitlist Info: https://advising.cis.upenn.edu/waitlist/","semester":"2023A","num_sections":2,"course_quality":3.368,"instructor_quality":3.394,"difficulty":2.228,"work_required":2.106,"recommendation_score":null},{"id":"CIS-5990","title":"Master's Indep Study","description":"For master's students studying a specific advanced subject area in computer and information science. Involves coursework and class presentations. A CIS 5990 course unit will invariably include formally gradable work comparable to that in a CIS 500-level course. Students should discuss with the faculty supervisor the scope of the Independent Study, expectations, work involved, etc.","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null},{"id":"CIS-0099","title":"Ugrad Resrch/Ind Study","description":"An opportunity for the student to become closely associated with a professor (1) in a research effort to develop research skills and techniques and/or (2) to develop a program of independent in-depth study in a subject area in which the professor and student have a common interest. The challenge of the task undertaken must be consistent with the student's academic level. To register for this course, the student must submit a detailed proposal, signed by the independent study supervisor, to the SEAS Office of Academic Programs (111 Towne) no later than the end of the \"add\" period. Prerequisite: A maximum of 2 c.u. of CIS 0099 may be applied toward the B.A.S. or B.S.E. degree requirements.","semester":"2023A","num_sections":1,"course_quality":null,"instructor_quality":null,"difficulty":null,"work_required":null,"recommendation_score":null}]