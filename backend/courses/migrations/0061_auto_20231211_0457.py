# Generated by Django 3.2.23 on 2023-12-11 09:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("courses", "0060_alter_course_primary_listing"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="ngssrestriction",
            name="courses",
        ),
        migrations.AddField(
            model_name="course",
            name="manually_set_parent_course",
            field=models.BooleanField(
                default=False,
                help_text="\nA flag indicating whether the `parent_course` field of this course was confirmed/set\nmanually or from a University-provided crosswalk,\nrather than inferred by an automatic script.\n",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="parent_course",
            field=models.ForeignKey(
                blank=True,
                help_text="\nThe parent of this course (the most recent offering of this course in a previous semester).\nThe graph of parent relationships is used to determine course topics. Any manual changes\nto this field should be denoted with `manually_set_parent_course=True`, so they are not\noverwritten by our automatic script.\n",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="children",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="section",
            name="ngss_restrictions",
            field=models.ManyToManyField(
                blank=True,
                help_text="All NGSS registration Restriction objects to which this section is subject. This field will be empty for sections in 2022B or later.",
                related_name="sections",
                to="courses.NGSSRestriction",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="num_activities",
            field=models.IntegerField(
                default=0,
                help_text="\nThe number of distinct activities belonging to this course (precomputed for efficiency).\nMaintained by the registrar import / recompute_soft_state script.\n",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="topic",
            field=models.ForeignKey(
                blank=True,
                help_text="The Topic of this course (computed from the `parent_course` graph).",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="courses",
                to="courses.topic",
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="num_meetings",
            field=models.IntegerField(
                default=0,
                help_text="\nThe number of meetings belonging to this section (precomputed for efficiency).\nMaintained by the registrar import / recompute_soft_state script.\n",
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="pre_ngss_restrictions",
            field=models.ManyToManyField(
                blank=True,
                help_text="All pre-NGSS (deprecated since 2022B) registration Restriction objects to which this section is subject. This field will be empty for sections in 2022B or later.",
                related_name="sections",
                to="courses.PreNGSSRestriction",
            ),
        ),
        migrations.AlterField(
            model_name="topic",
            name="most_recent",
            field=models.ForeignKey(
                help_text="\nThe most recent course (by semester) of this topic. You must change the corresponding\n`Topic` object's `most_recent` field before deleting a Course if it is the\n`most_recent` course (`on_delete=models.PROTECT`).\n",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="courses.course",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="course",
            unique_together={
                ("topic", "semester"),
                ("full_code", "semester"),
                ("department", "code", "semester"),
            },
        ),
    ]
