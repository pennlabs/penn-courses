# Generated by Django 3.2.23 on 2024-02-05 06:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0061_merge_20231112_1524'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('degree', '0004_auto_20231117_1704'),
    ]

    operations = [
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.CharField(choices=[('EU_BSE', 'Engineering BSE'), ('EU_BAS', 'Engineering BAS'), ('AU_BA', 'College BA'), ('WU_BS', 'Wharton BS')], help_text='\nThe program code for this degree, e.g., EU_BSE\n', max_length=10)),
                ('degree', models.CharField(help_text='\nThe degree code for this degree, e.g., BSE\n', max_length=4)),
                ('major', models.CharField(help_text='\nThe major code for this degree, e.g., BIOL\n', max_length=4)),
                ('concentration', models.CharField(help_text='\nThe concentration code for this degree, e.g., BMAT\n', max_length=4, null=True)),
                ('year', models.IntegerField(help_text='\nThe effective year of this degree, e.g., 2023\n')),
            ],
        ),
        migrations.CreateModel(
            name='DoubleCountRestriction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_courses', models.PositiveSmallIntegerField(help_text='\nThe maximum number of courses you can count for both rules.\n', null=True)),
                ('max_credits', models.DecimalField(decimal_places=2, help_text='\nThe maximum number of CUs you can count for both rules.\n', max_digits=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fulfillment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_code', models.CharField(blank=True, db_index=True, help_text='The dash-joined department and code of the course, e.g., `CIS-120`', max_length=16)),
                ('semester', models.CharField(help_text='\nThe semester of the course (of the form YYYYx where x is A [for spring],\nB [summer], or C [fall]), e.g. `2019C` for fall 2019. Null if this fulfillment\ndoes not yet have a semester.\n', max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SatisfactionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('satisfied', models.BooleanField(default=False, help_text='Whether the rule is satisfied')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_checked', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.RemoveField(
            model_name='userdegreeplan',
            name='courses',
        ),
        migrations.RemoveField(
            model_name='userdegreeplan',
            name='degree_plan',
        ),
        migrations.RemoveField(
            model_name='userdegreeplan',
            name='person',
        ),
        migrations.RemoveConstraint(
            model_name='degreeplan',
            name='unique degreeplan',
        ),
        migrations.RemoveConstraint(
            model_name='rule',
            name='num_course_credits_gt_0',
        ),
        migrations.RemoveField(
            model_name='degreeplan',
            name='concentration',
        ),
        migrations.RemoveField(
            model_name='degreeplan',
            name='major',
        ),
        migrations.RemoveField(
            model_name='degreeplan',
            name='program',
        ),
        migrations.RemoveField(
            model_name='degreeplan',
            name='year',
        ),
        migrations.RemoveField(
            model_name='rule',
            name='degree_plan',
        ),
        migrations.RemoveField(
            model_name='rule',
            name='num_courses',
        ),
        migrations.AddField(
            model_name='degreeplan',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='degreeplan',
            name='name',
            field=models.CharField(default='Test', help_text="The user's nickname for the degree plan.", max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='degreeplan',
            name='person',
            field=models.ForeignKey(default=0, help_text='The user the schedule belongs to.', on_delete=django.db.models.deletion.CASCADE, to='auth.user'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='degreeplan',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='rule',
            name='num',
            field=models.PositiveSmallIntegerField(help_text='\nThe minimum number of courses or subrules required for this rule.\n', null=True),
        ),
        migrations.AlterField(
            model_name='rule',
            name='parent',
            field=models.ForeignKey(help_text="\nThis rule's parent Rule if it has one. Null if this is a top level rule\n(i.e., degree is not null).\n", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='degree.rule'),
        ),
        migrations.AlterField(
            model_name='rule',
            name='q',
            field=models.TextField(blank=True, help_text='\nString representing a Q() object that returns the set of courses\nsatisfying this rule. Only non-empty if this is a Rule leaf.\nThis Q object is expected to be normalized before it is serialized\nto a string.\n', max_length=1000),
        ),
        migrations.AddConstraint(
            model_name='degreeplan',
            constraint=models.UniqueConstraint(fields=('name', 'person'), name='degreeplan_name_person'),
        ),
        migrations.DeleteModel(
            name='UserDegreePlan',
        ),
        migrations.AddField(
            model_name='satisfactionstatus',
            name='degree_plan',
            field=models.ForeignKey(help_text='The degree plan that leads to the satisfaction of the rule', on_delete=django.db.models.deletion.CASCADE, related_name='satisfactions', to='degree.degreeplan'),
        ),
        migrations.AddField(
            model_name='satisfactionstatus',
            name='rule',
            field=models.ForeignKey(help_text='The rule that is satisfied', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='degree.rule'),
        ),
        migrations.AddField(
            model_name='fulfillment',
            name='degree_plan',
            field=models.ForeignKey(help_text='The degree plan with which this fulfillment is associated', on_delete=django.db.models.deletion.CASCADE, related_name='fulfillments', to='degree.degreeplan'),
        ),
        migrations.AddField(
            model_name='fulfillment',
            name='historical_course',
            field=models.ForeignKey(help_text='\nThe last offering of the course with the full code, or null if \nthere is no such historical course.\n', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='courses.course'),
        ),
        migrations.AddField(
            model_name='fulfillment',
            name='rules',
            field=models.ManyToManyField(blank=True, help_text='\nThe rules this course fulfills. Blank if this course does not apply\nto any rules.\n', related_name='_degree_fulfillment_rules_+', to='degree.Rule'),
        ),
        migrations.AddField(
            model_name='doublecountrestriction',
            name='other_rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='degree.rule'),
        ),
        migrations.AddField(
            model_name='doublecountrestriction',
            name='rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='degree.rule'),
        ),
        migrations.AddConstraint(
            model_name='degree',
            constraint=models.UniqueConstraint(fields=('program', 'degree', 'major', 'concentration', 'year'), name='unique degree'),
        ),
        migrations.AddField(
            model_name='rule',
            name='degree',
            field=models.ForeignKey(help_text='\nThe degree that has this rule. Null if this rule has a parent.\n', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='degree.degree'),
        ),
        migrations.AlterField(
            model_name='degreeplan',
            name='degree',
            field=models.ForeignKey(help_text='The degree this is associated with.', on_delete=django.db.models.deletion.CASCADE, to='degree.degree'),
        ),
        migrations.AddConstraint(
            model_name='satisfactionstatus',
            constraint=models.UniqueConstraint(fields=('degree_plan', 'rule'), name='unique_satisfaction'),
        ),
    ]
