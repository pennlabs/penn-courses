import {
	bigint,
	bigserial,
	boolean,
	doublePrecision,
	integer,
	numeric,
	pgTable,
	text,
	timestamp,
	varchar,
} from 'drizzle-orm/pg-core'

import { $course } from '@/core/db/schema/course/course.model'

/**
 * This model was autogenerated / edited using drizzle-kit.
 * The source of truth is the model defined in the Django backend,
 * so be sure to sync changes with the backend.
 * DO NOT EXPORT/SYNC THIS MODEL.
 */
export const $section = pgTable('courses_section', {
	id: bigserial('id', { mode: 'bigint' }).primaryKey().notNull(),
	createdAt: timestamp('created_at', {
		withTimezone: true,
		mode: 'string',
	}).notNull(),
	updatedAt: timestamp('updated_at', {
		withTimezone: true,
		mode: 'string',
	}).notNull(),
	code: varchar('code', { length: 16 }).notNull(),
	status: varchar('status', { length: 4 }).notNull(),
	// You can use { mode: "bigint" } if numbers are exceeding js number limitations
	capacity: bigint('capacity', { mode: 'number' }).notNull(),
	activity: varchar('activity', { length: 50 }).notNull(),
	meetingTimes: text('meeting_times').notNull(),
	// You can use { mode: "bigint" } if numbers are exceeding js number limitations
	courseId: bigint('course_id', { mode: 'number' })
		.notNull()
		.references(() => $course.id),
	credits: numeric('credits', { precision: 4, scale: 2 }),
	fullCode: varchar('full_code', { length: 32 }).notNull(),
	percentOpen: doublePrecision('percent_open').notNull(),
	registrationVolume: integer('registration_volume').notNull(),
	numMeetings: integer('num_meetings').notNull(),
	hasReviews: boolean('has_reviews').notNull(),
	hasStatusUpdates: boolean('has_status_updates').notNull(),
	crn: varchar('crn', { length: 8 }),
	codeSpecificCapacity: integer('code_specific_capacity').notNull(),
	codeSpecificEnrollment: integer('code_specific_enrollment').notNull(),
	enrollment: integer('enrollment').notNull(),
})
