import {
	bigint,
	bigserial,
	boolean,
	doublePrecision,
	pgTable,
	text,
	timestamp,
	varchar,
} from 'drizzle-orm/pg-core'

import { $section } from '@/core/db/schema/course/section.model'

/**
 * This model was autogenerated / edited using drizzle-kit.
 * The source of truth is the model defined in the Django backend,
 * so be sure to sync changes with the backend.
 * DO NOT EXPORT/SYNC THIS MODEL.
 */
export const $statusUpdate = pgTable("courses_statusupdate", {
	id: bigserial({ mode: "bigint" }).primaryKey().notNull(),
	oldStatus: varchar("old_status", { length: 16 }).notNull(),
	newStatus: varchar("new_status", { length: 16 }).notNull(),
	createdAt: timestamp("created_at", { withTimezone: true, mode: 'string' }).notNull(),
	alertSent: boolean("alert_sent").notNull(),
	requestBody: text("request_body").notNull(),
	// You can use { mode: "bigint" } if numbers are exceeding js number limitations
	sectionId: bigint("section_id", { mode: "number" })
        .notNull()
        .references(() => $section.id),
	inAddDropPeriod: boolean("in_add_drop_period").notNull(),
	percentThroughAddDropPeriod: doublePrecision("percent_through_add_drop_period"),
})
